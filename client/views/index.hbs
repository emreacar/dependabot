<html lang='en'>

<head>
  <meta charset='utf-8' />
  <meta name='viewport' content='width=device-width, initial-scale=1' />
  <title>
    Dependabot - Keep all your packages up to date
  </title>
  <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'
    integrity='sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3' crossorigin='anonymous' />
  <link href='css/style.css' rel='stylesheet' />

  <!-- Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@200;400;900&display=swap" rel="stylesheet">
  <link rel="stylesheet"
    href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

  <!-- scripts -->
  <script src='https://cdn.jsdelivr.net/npm/vue@2.6.14'></script>
</head>

<body>
  <div class='container h-100' id='vue-app'>
    <div class="row align-items-center justify-content-center h-100">
      <template v-if="!trackerResult.id">
        <div class="col-12 col-md-10 col-lg-4 bg-light py-4 shadow tracker-form">
          <h1 class="my-4 text-center">Keep your packages
            <span class="gradient-text-success">UP TO DATE</span>
          </h1>
          <div class="form-group mb-2">
            <select v-model="tracker.provider" class="form-control form-control-lg">
              <option value="GITHUB">GITHUB</option>
            </select>
          </div>

          <div class="form-group mb-2">
            <input type="text" placeholder="Kullan覺c覺 Ad覺" v-model="tracker.username"
              class="form-control form-control-lg" />
          </div>

          <div class="form-group mb-2">
            <input type="text" placeholder="Repo Ad覺" v-model="tracker.repository"
              class="form-control form-control-lg" />
          </div>

          <div class="input-group mb-3">
            <input v-model="mailSubscriber.value" type="text"
              :class="`form-control form-control-lg ${mailSubscriber.error && 'animate__animated animate__shakeX' || ''}`"
              placeholder="Mail Adresiniz" @keypress.enter="addMail()">
            <button class="btn btn-outline-success" type="button" id="button-addon2" @click="addMail()">
              <i class="las la-plus"></i>
            </button>
          </div>

          <ul class="list-group mb-4">
            <li v-for="(email, emailIndex) in tracker.emails" :key="emailIndex"
              class="list-group-item animate__animated animate__fadeInUp">
              <button class="btn btn-sm btn-outline-danger" @click="removeMail(emailIndex)">
                <i class="las la-trash"></i>
              </button>

              {% email %}
            </li>
          </ul>

          <div v-if="form.id === 'trackerForm' && form.error" class="alert alert-danger">
            {% form.error %}
          </div>

          <button type="button" @click="saveTracker()" class="btn btn-block btn-success btn-lg"
            :disabled="form.loading && form.id === 'trackerForm'">
            <i v-if="form.id === 'trackerForm' && form.loading" class="las la-spin la-spinner"></i>
            <i v-else class="las la-search"></i>

            KONTROL ET
          </button>
        </div>
      </template>

      <template v-else>
        <div class="col-12 col-md-10 col-lg-4 bg-light py-4 shadow tracker-result">

          <template v-if="parseInt(trackerResult.status) === 1">
            <h1 class="mt-4 text-center">
              <span class="gradient-text-success">I'm Cheking!</span>
            </h1>

            <p class="text-center"><i class="las la-spin la-spinner"></i>
              <span>Checking dependency list...</span><br />
              <span v-if="retryCount > 1">It took a while! If you don't want to wait, you can close the window. I will
                send you an e-mail when
                the process is finished.</span>
            </p>
          </template>

          <template v-else-if="!trackerResult.trackerResult.error">
            <h1
              v-if="trackerResult.trackerResult.outDatedPackages && trackerResult.trackerResult.outDatedPackages.length"
              class="my-4 text-center">Some Packages Are
              <span class="gradient-text-danger">OUT OF DATE</span>
            </h1>

            <h1 v-else class="my-4 text-center">Congratulations!
              <span class="gradient-text-success">YOU UP TO DATE</span>
            </h1>

            <ul
              v-if="trackerResult.trackerResult.outDatedPackages && trackerResult.trackerResult.outDatedPackages.length"
              class="list-group mb-4">
              <li v-for="(outPackage, packageIndex) in trackerResult.trackerResult.outDatedPackages" :key="packageIndex"
                class="list-group-item animate__animated animate__fadeInUp">
                {% outPackage.name %}<br />

                <span class="text-danger">Used: {% outPackage.usedVersion %}</span> -
                <span class="text-success">Current: {% outPackage.currentVersion %}</span>
              </li>
            </ul>

            <div class="alert alert-info mb-4">
              I will email the result of the check <span class="font-weight-bold">every 24 hours.</span>
            </div>

            <button class="btn btn-outline-info small-text mt-4" @click="resetPage()">
              <i class="las la-angle-left"></i> Query another repository
            </button>
          </template>

          <template v-else>
            <h1 class="my-4 text-center">There are some errors.</h1>

            <div class="alert alert-danger mb-4">{% trackerResult.trackerResult.error %}</div>

            <button class="btn btn-outline-info small-text mt-4" @click="resetPage()">
              <i class="las la-angle-left"></i> Try Again
            </button>
          </template>
        </div>
      </template>
    </div>
  </div>

  <script src='https://unpkg.com/axios/dist/axios.min.js'></script>
  <script>
    const httpService = axios.create({ baseURL: '{{ data.appUrl }}' });
    const trackerSchema = {
      provider: 'GITHUB',
      username: null,
      repository: null,
      emails: [],
    };
    const app =
      new Vue({
        el: '#vue-app',
        delimiters: ['{%', '%}'],
        data() {
          return {
            form: {
              id: null,
              loading: false,
              error: null,
            },

            tracker: JSON.parse(JSON.stringify(trackerSchema)),
            retryCount: 0,
            trackerResult: {},

            mailSubscriber: {
              value: null,
              error: false,
            },
          };
        },
        methods: {
          formError(id, error) {
            this.form = {
              id,
              loading: false,
              error
            }
          },

          formCompleted(id) {
            this.form = {
              id,
              loading: false,
              error: null
            }
          },

          formSending(id) {
            this.form = {
              id,
              loading: true,
              error: null
            }
          },

          addMail() {
            const { value } = this.mailSubscriber;

            this.mailSubscriber.error = false;

            if (!value || !/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(value)) {
              this.mailSubscriber.error = true;

              setTimeout(() => this.mailSubscriber.error = false, 1000);

              return;
            };

            if (!this.tracker.emails.includes(value)) this.tracker.emails.push(this.mailSubscriber.value);

            this.mailSubscriber.value = null
          },

          removeMail(index) {
            this.tracker.emails.splice(index, 1);
          },

          async saveTracker() {
            this.retryCount = 0;
            this.formSending('trackerForm');

            const { provider, username, repository, emails } = this.tracker;

            if (!provider || !username || !repository) {
              this.formError('trackerForm', 'Please check required fields.');
              return;
            }

            if (!emails.length) {
              this.formError('trackerForm', 'Please enter at least one e-mail address.');
              return;
            }

            try {
              const response = await httpService.post('tracker', this.tracker);
              this.formCompleted('trackerForm');

              const { data, error } = response.data;

              if (error) {
                this.formError('trackerForm', error);
                return;
              }

              this.trackerResult = data;
              this.tracker = JSON.parse(JSON.stringify(trackerSchema));

              setTimeout(function (scope) {
                scope.getTracker();
              }, 3000, this);


            } catch (e) {
              this.formError('trackerForm', e.message);
            }
          },

          async getTracker() {
            if (!this.trackerResult || !this.trackerResult.id) {
              console.log('No ID');
              return;
            }

            this.retryCount += 1;
            const response = await httpService.get(`tracker/${this.trackerResult.id}`);
            const { data, error } = response.data;

            if (!error) this.trackerResult = JSON.parse(JSON.stringify(data));

            if (parseInt(this.trackerResult.status) === 1) {
              setTimeout(function (scope) { scope.getTracker() }, 3000, this);
            }
          },

          resetPage() {
            this.trackerResult = {}
            this.retryCount = 0;
          }
        },
      });
  </script>

  <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js'
    integrity='sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p'
    crossorigin='anonymous'></script>
</body>

</html>
